https://en.wikibooks.org/wiki/Java_Programming/Defining_Classes#Fundamentals
Every class in Java can be composed of the following elements:fields or member variables or instance variables — Fields are variables that hold data specific to each object. For example, an employee might have an ID number. There is one field for each object of a class. member methods or instance variables — Member methods perform operations on an object. For example, an employee might have a method to issue his paycheck or to access his name. static fields — Static fields are common to any object of the same class. For example, a static field within the Employee class could keep track of the last ID number issued. Only one static field exists for one class. static methods — Static methods are methods that do not affect a specific object. inner classes — Sometimes it is useful to contain a class within another one if it is useless outside of the class or should not be accessed outside the class. Constructors — A special method that generates a new object. Parameterized types — Since 1.5, parameterized types can be assigned to a class during definition. The parameterized types will be substituted with the types specified at the class's instantiation. It is done by the compiler. It is similar to the C language macro '#define' statement, where a preprocessor evaluates the macros.The following Java code would produce this output: